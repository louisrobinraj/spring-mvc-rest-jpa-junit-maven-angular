Exception handling


@ControllerAdvice
public class GlobalExceptionController {

	@ExceptionHandler(RuntimeException.class)
	public ModelAndView handleAllException(RuntimeException e, HttpServletResponse response) throws IOException {
		HttpStatus responseCode = HttpStatus.BAD_REQUEST;
		if (e instanceof ResourceNotFoundException) {
			responseCode = HttpStatus.NOT_FOUND;
		} else if (e instanceof AccessException) {
			responseCode = HttpStatus.FORBIDDEN;
		} else if (e instanceof IllegalArgumentException) {
			responseCode = HttpStatus.FORBIDDEN;
		}
		response.setStatus(responseCode.value());
		ModelAndView model = new ModelAndView("error/generic_error");
		model.addObject("errMsg", e.getMessage());

		return model;

	}
}


1)when controller throw Runtime Exception this class executed




<!-- <bean id="executeTimeInterceptor" class="com.sjc.hrms.intercepters.ProcessingTimeInterceptors" 
		/> -->

	<!-- <bean id="maintenanceInterceptor" class="com.sjc.hrms.intercepters.MaintenanceInterceptor"> -->
	<!-- <property name="maintenanceStartTime" value="23" /> -->
	<!-- <property name="maintenanceEndTime" value="24" /> -->
	<!-- <property name="maintenanceMapping" value="/SpringMVC/maintenance.htm" 
		/> -->
	<!-- </bean> -->

	<!-- <mvc:interceptors> -->
	<!-- <ref bean="executeTimeInterceptor" /> -->
	<!-- <!-- <ref bean="maintenanceInterceptor" /> -->
	<!-- </mvc:interceptors> -->